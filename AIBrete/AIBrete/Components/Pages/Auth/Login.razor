@page "/login"
@inherits Log
@using AIBrete.Components.Pages.Login
@using AIBrete.Service.Services.Auth
@using System.ComponentModel.DataAnnotations

<EditForm Model="@loginModel" OnValidSubmit="HandleLogin" class="login-card">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <h3 class="text-center mb-3">Iniciar sesión</h3>

    <div class="form-group">
        <label for="username">Usuario</label>
        <InputText id="username" class="form-control" @bind-Value="loginModel.Username" />
        <ValidationMessage For="@(() => loginModel.Username)" />
    </div>

    <div class="form-group">
        <label for="password">Contraseña</label>
        <InputText id="password" type="password" class="form-control" @bind-Value="loginModel.Password" />
        <ValidationMessage For="@(() => loginModel.Password)" />
    </div>

    <button type="submit" class="btn btn-primary btn-block" disabled="@isLoading">
        Entrar
        @if (isLoading)
        {
            <span class="spinner-border spinner-border-sm"></span>
        }
        else
        {
            
        }
    </button>

    @if (loginError)
    {
        <div class="alert alert-danger mt-3">
            Usuario o contraseña incorrectos.
        </div>
    }
</EditForm>

@* <div class="split-container">
    <div class="row">
        <div class="loading">
            <EditForm Model="@loginModel" OnValidSubmit="HandleLogin" class="login-card">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <h3 class="text-center mb-3">Iniciar sesión</h3>

                <div class="form-group">
                    <label for="username">Usuario</label>
                    <InputText id="username" class="form-control" @bind-Value="loginModel.Username" />
                    <ValidationMessage For="@(() => loginModel.Username)" />
                </div>

                <div class="form-group">
                    <label for="password">Contraseña</label>
                    <InputText id="password" type="password" class="form-control" @bind-Value="loginModel.Password" />
                    <ValidationMessage For="@(() => loginModel.Password)" />
                </div>

                <button type="submit" class="btn btn-primary btn-block" disabled="@isLoading">
                    Aceptar
                    @if (isLoading)
                    {
                        <span class="spinner-border spinner-border-sm"></span>
                    }
                    else
                    {

                    }
                </button>

                @if (loginError)
                {
                    <div class="alert alert-danger mt-3">
                        Usuario o contraseña incorrectos.
                    </div>
                }
            </EditForm>
        </div>        
    </div>
</div> *@



@* @code {
    private LoginModel loginModel = new();
    private bool isLoading = false;
    private bool loginError = false;

    @inject AuthService AuthService
    @inject NavigationManager NavigationManager

    private async Task HandleLogin()
    {
        loginError = false;
        isLoading = true;

        var result = await AuthService.LoginAsync(loginModel.Username, loginModel.Password);
        if (result)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            loginError = true;
        }

        isLoading = false;
    }

    private class LoginModel
    {
        [Required(ErrorMessage = "El usuario es obligatorio.")]
        public string Username { get; set; }
        [Required(ErrorMessage = "La contraseña es obligatoria.")]
        public string Password { get; set; }
    }
} *@